<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sakura.study.dao.EmployeeMapper" >
  <resultMap id="BaseResultMap" type="com.sakura.study.model.Employee" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="department_id" property="departmentId" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="phone_number" property="phoneNumber" jdbcType="VARCHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="deleted" property="deleted" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, department_id, username, password, phone_number, real_name, create_time, deleted
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sakura.study.model.Employee" >
    insert into employee (id, department_id, username, 
      password, phone_number, real_name, 
      create_time, deleted)
    values (#{id,jdbcType=INTEGER}, #{departmentId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.sakura.study.model.Employee" >
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="departmentId != null" >
        department_id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="phoneNumber != null" >
        phone_number,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null" >
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sakura.study.model.Employee" >
    update employee
    <set >
      <if test="departmentId != null" >
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null" >
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sakura.study.model.Employee" >
    update employee
    set department_id = #{departmentId,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="findByUsername" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from employee
    where username = #{username} and deleted = false limit 1
  </select>

  <update id="deletedById" parameterType="java.lang.Integer">
    update employee
    set deleted = true
    where id = #{id}
  </update>

  <select id="getPageEmployee" resultType="com.sakura.study.dto.EmployeeDto" parameterType="com.sakura.study.dto.EmployeePageRequest">
    select
    e.id, e.department_id departmentId, e.username, e.phone_number phoneNumber, e.real_name realName, e.create_time createTime, d.department
    from employee e
    inner join department d
    on d.id = e.department_id
    where e.id != #{selfId} and e.deleted = false
    <if test="departmentId != null">
      and e.department_id = #{departmentId}
    </if>
    <if test="realName != null">
      and e.real_name like concat('%',#{realName},'%')
    </if>
    order by e.id desc
    limit #{skip},#{pageCount}
  </select>

  <select id="getPageEmployeeCount" parameterType="com.sakura.study.dto.EmployeePageRequest" resultType="java.lang.Integer">
    select
    count(*)
    from employee
    where id != #{selfId} and deleted = false
    <if test="departmentId != null">
      and department_id = #{departmentId}
    </if>
    <if test="realName != null">
      and real_name like concat('%',#{realName},'%')
    </if>
  </select>
</mapper>