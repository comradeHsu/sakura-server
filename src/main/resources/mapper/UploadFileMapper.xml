<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sakura.study.dao.UploadFileMapper" >
  <resultMap id="BaseResultMap" type="com.sakura.study.model.UploadFile" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="file_url" property="fileUrl" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="DATE" />
    <result column="update_time" property="updateTime" jdbcType="DATE" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, file_url, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.sakura.study.model.UploadFileKey" >
    select 
    <include refid="Base_Column_List" />
    from upload_file
    where id = #{id,jdbcType=INTEGER}
      and user_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="getPage" resultType="com.sakura.study.model.UploadFile">
    select
    f.id, f.user_id, f.file_url, f.create_time, f.update_time,
    u.username as userName
    from upload_file f
    left join
    user u on f.user_id=u.id
    <where>
      <if test="userName!=null">
        u.username like "%${userName}%"
      </if>
    </where>
    limit
    #{skip}, #{pageCount}
  </select>

  <select id="getCount"  resultType="java.lang.Integer">
    select
    count(1)
    from upload_file f
    right join
    user u on f.user_id=u.id
    <where>
      <if test="userName!=null">
        u.username like "%${userName}%"
      </if>
    </where>

  </select>


  <delete id="deleteByPrimaryKey" parameterType="com.sakura.study.model.UploadFileKey" >
    delete from upload_file
    where id = #{id,jdbcType=INTEGER}
      and user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sakura.study.model.UploadFile" >
    insert into upload_file (id, user_id, file_url, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{fileUrl,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=DATE}, #{updateTime,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.sakura.study.model.UploadFile" >
    insert into upload_file
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="fileUrl != null" >
        file_url,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="fileUrl != null" >
        #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sakura.study.model.UploadFile" >
    update upload_file
    <set >
      <if test="fileUrl != null" >
        file_url = #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
      and user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sakura.study.model.UploadFile" >
    update upload_file
    set file_url = #{fileUrl,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=DATE},
      update_time = #{updateTime,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
      and user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>