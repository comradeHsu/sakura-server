<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sakura.study.dao.ProfessorMapper" >
  <resultMap id="BaseResultMap" type="com.sakura.study.model.Professor" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="major_id" property="majorId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="introduction" property="introduction" jdbcType="VARCHAR" />
    <result column="head_icon" property="headIcon" jdbcType="VARCHAR" />
    <result column="email_address" property="emailAddress" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="deleted" property="deleted" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, major_id, name, age, introduction, head_icon, email_address, create_time, deleted
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from professor
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from professor
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sakura.study.model.Professor" >
    insert into professor (id, major_id, name, 
      age, introduction, head_icon, 
      email_address, create_time, deleted
      )
    values (#{id,jdbcType=INTEGER}, #{majorId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{introduction,jdbcType=VARCHAR}, #{headIcon,jdbcType=VARCHAR}, 
      #{emailAddress,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sakura.study.model.Professor" keyProperty="id" useGeneratedKeys="true">
    insert into professor
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="majorId != null" >
        major_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="introduction != null" >
        introduction,
      </if>
      <if test="headIcon != null" >
        head_icon,
      </if>
      <if test="emailAddress != null" >
        email_address,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="majorId != null" >
        #{majorId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="introduction != null" >
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="headIcon != null" >
        #{headIcon,jdbcType=VARCHAR},
      </if>
      <if test="emailAddress != null" >
        #{emailAddress,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sakura.study.model.Professor" >
    update professor
    <set >
      <if test="majorId != null" >
        major_id = #{majorId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="introduction != null" >
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="headIcon != null" >
        head_icon = #{headIcon,jdbcType=VARCHAR},
      </if>
      <if test="emailAddress != null" >
        email_address = #{emailAddress,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sakura.study.model.Professor" >
    update professor
    set major_id = #{majorId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      introduction = #{introduction,jdbcType=VARCHAR},
      head_icon = #{headIcon,jdbcType=VARCHAR},
      email_address = #{emailAddress,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="getPageProfessor" parameterType="com.sakura.study.dto.PageRequest" resultType="com.sakura.study.dto.ProfessorDto">
    select
    p.id, p.major_id, p.name, p.age, p.introduction, p.head_icon, p.email_address, p.create_time,
    m.major_name,u.school_name,u.id as universityId
    from professor p
    left join major m
    on p.major_id = m.id
    left join university u
    on m.university_id = u.id
    where p.deleted = false
    order by p.id desc
    limit #{skip},#{pageCount}
  </select>

  <select id="getPageProfessorCount" resultType="java.lang.Integer">
    select
    count(*)
    from professor p
    where p.deleted = false
  </select>
</mapper>