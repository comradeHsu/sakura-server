<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sakura.study.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.sakura.study.model.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="user_type" property="userType" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
  </resultMap>
  <sql id="Base_Column_List">
    id, parent_id, username, password, phone_number, age, icon, real_name, create_time, 
    deleted, user_type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sakura.study.model.User">
    insert into user (id, parent_id, username, 
      password, phone_number, age, 
      icon, real_name, create_time, 
      deleted, user_type)
    values (#{id,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{icon,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{deleted,jdbcType=BIT}, #{userType})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.sakura.study.model.User" useGeneratedKeys="true">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="phoneNumber != null">
        phone_number,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sakura.study.model.User">
    update user
    <set>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="userType != null">
        user_type = #{userType},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sakura.study.model.User">
    update user
    set parent_id = #{parentId,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      user_type = #{userType},
      age = #{age,jdbcType=INTEGER},
      icon = #{icon,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="getPageUser" resultType="com.sakura.study.dto.UserDto">
    select
      u.id, u.parent_id, u.username, u.phone_number, u.age, u.icon, u.real_name, u.create_time, u.user_type,
      p.username as parentUsername
    from user u
      LEFT JOIN user p
      ON p.id = u.parent_id
    where u.deleted = false
    <if test="realName != null">
      and u.real_name like concat('%',#{realName},'%')
    </if>
    limit #{start},#{pageCount}
  </select>

  <select id="getPageUserCount" resultType="java.lang.Integer">
    select
    COUNT(*)
    from user
    where deleted = false
    <if test="realName != null">
      and real_name like concat('%',#{realName},'%')
    </if>
  </select>

  <select id="getParents" resultType="com.sakura.study.model.User">
    select
    u.id, u.parent_id, u.username
    from user u
    where u.deleted = false and u.parent_id = 0
    <if test="username != null">
      and u.username like concat('%',#{username},'%')
    </if>
  </select>

  <update id="resetParentId" parameterType="java.lang.Integer">
    update user
    set parent_id = 0
    where parent_id = #{parentId}
  </update>

  <select id="findByUsername" resultType="com.sakura.study.model.User">
    select
    <include refid="Base_Column_List" />
    from user
    where deleted = false and username = #{username} limit 1
  </select>

  <select id="getUserInfo" resultType="com.sakura.study.dto.UserDto">
    select
    u.id, u.parent_id, u.username, u.phone_number, u.age, u.icon, u.real_name, u.create_time,
    u.user_type,
    p.username as parentUsername, p.phone_number as parentPhone
    from user u
    LEFT JOIN user p
    ON p.id = u.parent_id
    where u.deleted = false
    and u.id = #{id}
  </select>

  <select id="findByPhone" resultType="com.sakura.study.model.User">
    select
    <include refid="Base_Column_List" />
    from user
    where deleted = false and phone_number = #{phone} limit 1
  </select>
</mapper>