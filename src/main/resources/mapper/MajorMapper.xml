<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sakura.study.dao.MajorMapper" >
  <resultMap id="BaseResultMap" type="com.sakura.study.model.Major" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="university_id" property="universityId" jdbcType="INTEGER" />
    <result column="major_name" property="majorName" jdbcType="VARCHAR" />
    <result column="major_desc" property="majorDesc" jdbcType="VARCHAR" />
    <result column="degree_type" property="degreeType" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="deleted" property="deleted" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, university_id, major_name, major_desc, degree_type, create_time, deleted
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from major
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from major
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sakura.study.model.Major" >
    insert into major (id, university_id, major_name, 
      degree_type, create_time, deleted
      )
    values (#{id,jdbcType=INTEGER}, #{universityId,jdbcType=INTEGER}, #{majorName,jdbcType=VARCHAR}, 
      #{degreeType,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sakura.study.model.Major" >
    insert into major
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="universityId != null" >
        university_id,
      </if>
      <if test="majorName != null" >
        major_name,
      </if>
      <if test="degreeType != null" >
        degree_type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="universityId != null" >
        #{universityId,jdbcType=INTEGER},
      </if>
      <if test="majorName != null" >
        #{majorName,jdbcType=VARCHAR},
      </if>
      <if test="degreeType != null" >
        #{degreeType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sakura.study.model.Major" >
    update major
    <set >
      <if test="universityId != null" >
        university_id = #{universityId,jdbcType=INTEGER},
      </if>
      <if test="majorName != null" >
        major_name = #{majorName,jdbcType=VARCHAR},
      </if>
      <if test="degreeType != null" >
        degree_type = #{degreeType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sakura.study.model.Major" >
    update major
    set university_id = #{universityId,jdbcType=INTEGER},
      major_name = #{majorName,jdbcType=VARCHAR},
      degree_type = #{degreeType,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="getPageMajors" resultMap="BaseResultMap" parameterType="com.sakura.study.dto.MajorPageRequest">
    select
    <include refid="Base_Column_List" />
    from major
    where university_id = #{universityId} and deleted = FALSE
    <if test="majorName != null">
      and major_name like concat('%',#{majorName},'%')
    </if>
    <if test="degreeType != null">
      and degree_type = #{degreeType}
    </if>
    order by id DESC
    limit #{skip},#{pageCount}
  </select>

  <select id="getPageMajorsCount" resultType="java.lang.Integer" parameterType="com.sakura.study.dto.MajorPageRequest">
    select
    count(*)
    from major
    where university_id = #{universityId} and deleted = FALSE
    <if test="majorName != null">
      and major_name like concat('%',#{majorName},'%')
    </if>
    <if test="degreeType != null">
      and degree_type = #{degreeType}
    </if>
  </select>

  <select id="findByUniversityIdAndName" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from major
    where university_id = #{universityId} and deleted = FALSE
    and major_name = #{majorName} limit 1
  </select>
</mapper>