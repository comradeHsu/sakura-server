<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sakura.study.dao.DepartmentMapper" >
  <resultMap id="BaseResultMap" type="com.sakura.study.model.Department" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="department" property="department" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="deleted" property="deleted" jdbcType="BIT" />
  </resultMap>

  <resultMap id="DtoMap" type="com.sakura.study.dto.DepartmentDto" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="department" property="department" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="deleted" property="deleted" jdbcType="BIT" />
    <result column="employeeCount" property="employeeCount" jdbcType="INTEGER" />
    <collection property="functions" javaType="java.util.ArrayList" column="id" ofType="com.sakura.study.model.Function"
                select="com.sakura.study.dao.FunctionMapper.getFunctionByDepartment"/>
  </resultMap>

  <sql id="Base_Column_List" >
    id, department, description, create_time, deleted
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from department
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from department
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sakura.study.model.Department" >
    insert into department (id, department, description, 
      create_time, deleted)
    values (#{id,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.sakura.study.model.Department" keyProperty="id" useGeneratedKeys="true">
    insert into department
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="department != null" >
        department,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="department != null" >
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sakura.study.model.Department" >
    update department
    <set >
      <if test="department != null" >
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sakura.study.model.Department" >
    update department
    set department = #{department,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="findByName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from department
    where department = #{department} and deleted = false limit 1
  </select>

  <select id="getDepartmentEmployeeCount" resultType="java.lang.Integer">
    select
    count(*)
    from employee
    where department_id = #{id} and deleted = false
  </select>

  <update id="deleteById" parameterType="java.lang.Integer" >
    update department
    set
    deleted = true
    where id = #{id}
  </update>

  <select id="getPageDepartment" resultMap="DtoMap">
    select
      d.id, d.department, d.description, d.create_time,
    (select count(*) from employee e where e.department_id = d.id and e.deleted = false) as employeeCount
    from department d
    where d.deleted = false limit #{start},#{pageCount}
  </select>

  <select id="getDepartmentCount" resultType="java.lang.Integer">
    select
    count(*)
    from department
    where deleted = false
  </select>

  <select id="getAllDepartment" resultMap="BaseResultMap">
    select
    id,department
    from department
    where deleted = false
  </select>
</mapper>